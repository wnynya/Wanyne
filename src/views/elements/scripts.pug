script.
  window.bundle = new Object(); 
  window.client = new Object(); 
  window.global = new Object(); 
script.
  global.api = '#{req.api}';
if req.login && req.account
  script.
    window.account = new Object(); 
    account.login = true; 
    account.uid = '#{req.account.uid}'; 
    account.eid = '#{req.account.eid}'; 
    account.label = '#{req.account.label}';
script window.Math.rem = (n = 1) => { return n * parseFloat(getComputedStyle(document.documentElement).fontSize); }
script function vh() { document.documentElement.style.setProperty('--vh', window.innerHeight * 0.01 + 'px'); } window.addEventListener('resize', vh); vh();

//- Lapis
include /views/elements/lapis
  
//- Notification
script(type="module" src="/resources/modules/notification.mjs" defer="defer")

//- Cursor
script(type="module" src="/resources/modules/cursor.mjs" defer="defer")

//- Inputs
script(type="module" src="/resources/modules/inputs.mjs" defer="defer")

//- Sidebar
script(type="module" defer="defer").
  class Sidebar {
    constructor(element = document.querySelector('main')) {
      if (!document.querySelector('aside.sidebar')) {
        return;
      }
      this.lastWidth = window.innerWidth;
      this.onScroll = () => {
        const aside = document.querySelector('aside.sidebar');
        const arect = aside.getBoundingClientRect();
        const rect = element.getBoundingClientRect();
        if (arect.height + Math.rem(5) > rect.bottom && window.scrollY - rect.height > rect.bottom) {
          aside.style.top = rect.bottom - arect.height + 'px';
        } else {
          aside.style.top = 'max(5rem, ' + rect.top + 'px)';
        }
      };
      const _this = this;
      this.onResize = () => {
        _this.lastWidth < 900 && 900 < window.innerWidth ? _this.close() : null;
        _this.lastWidth = window.innerWidth;
        _this.onScroll();
      };

      document.querySelector('aside.sidebar > button').addEventListener('click', (event) => {
        document.querySelector('aside.sidebar').classList.contains('open') ? _this.close() : _this.open();
      });

      var i = setInterval(() => {
        this.onScroll();
      }, 100);
      setTimeout(() => {
        clearInterval(i);
      }, 1000);
      this.onScroll();

      this.load();
    }

    open() {
      document.querySelector('aside.sidebar') ? document.querySelector('aside.sidebar').classList.add('open') : null;
    }

    close() {
      document.querySelector('aside.sidebar') ? document.querySelector('aside.sidebar').classList.remove('open') : null;
    }

    hide() {
      this.close();
      document.querySelector('aside.sidebar') ? document.querySelector('aside.sidebar').classList.add('hide') : null;
    }

    show() {
      document.querySelector('aside.sidebar') ? document.querySelector('aside.sidebar').classList.remove('hide') : null;
    }

    load() {
      document.addEventListener('scroll', this.onScroll);
      window.addEventListener('resize', this.onResize);
    }

    unload() {
      document.removeEventListener('scroll', this.onScroll);
      window.removeEventListener('resize', this.onResize);
    }
  }
  window.Sidebar = Sidebar;